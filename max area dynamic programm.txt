import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;


public class Solution {
    public static int largest(int h[]){
        
        int n= h.length;
        if(n==0)return 0;
        
        int maxarea=0;
        int left[]= new int[n];
        int right[]= new int[n];
        left[0]=-1;
        right[n-1]=n;
        
        for(int i=1; i<n; i++){
            int prev= i-1;
            while(prev>=0 && h[prev] >=h[i]){
                prev=left[prev];
            }
            left[i]=prev;
        }
        for(int i= n-2; i>=0; i--){
            int prev =i+1;
            while(prev<n && h[prev]>=h[i]){
                prev=right[prev];
            }
            right[i]=prev;
        }
        for(int i=0; i<n; i++){
            int width =right[i]-left[i]-1;
            maxarea = Math.max(maxarea, h[i]*width);
        }
        return maxarea;
    }
    public static void main(String[] args)  {
        Scanner input = new Scanner(System.in);
        int n= input.nextInt();
        int arr[]= new int[n];
        for(int i=0; i<n; i++){
            arr[i]= input.nextInt();
            
        }
        int ans = largest(arr);
        System.out.println(ans);


}
}